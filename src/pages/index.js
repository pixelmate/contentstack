import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import Stack from "../../sdk-plugins/index";
import Layout from "components/Layout/Layout";
import Image from "next/image";

const inter = Inter({ subsets: ["latin"] });

export default function Home({
  pagedata,
  carouselData,
  twocolumntileData,
  ctaData,
}) {
  return (
    <>
      <Head>
        <title>{pagedata.title + " - " + pagedata.page_desciption} </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Layout>
          <div
            id="carouselExampleSlidesOnly"
            class="carousel slide"
            data-ride="carousel"
          >
            <div class="carousel-inner">
              <div class="carousel-item active">
                <Image
                  className="banner_img"
                  src={carouselData.files.url}
                  width="1350"
                  height="600"
                  alt={"jsjs"}
                />
                <div class="carousel-caption d-none d-md-block"></div>
              </div>
            </div>
          </div>
          <div className="container">
            {twocolumntileData.reverse_orientation ? (
              <div class="row p-4">
                <div class="col d-flex align-items-center justify-content-center">
                  <Image
                    className="content_img"
                    src={twocolumntileData.image.url}
                    width="300"
                    height="300"
                    alt={"jsjs"}
                  />
                </div>
                <div class="col">
                  <h1>{twocolumntileData.title}</h1>
                  <h5>{twocolumntileData.desciption}</h5>
                </div>
              </div>
            ) : (
              <div class="row p-4">
                <div class="col ">
                  <h1>{twocolumntileData.title}</h1>
                  <h5>{twocolumntileData.desciption}</h5>
                </div>
                <div class="col d-flex align-items-center justify-content-center">
                  <Image
                    className="content_img"
                    src={twocolumntileData.image.url}
                    width="300"
                    height="300"
                    alt={"jsjs"}
                  />
                </div>
              </div>
            )}
          </div>
          <div className="container">
            {!twocolumntileData.reverse_orientation ? (
              <div class="row p-4">
                <div class="col d-flex align-items-center justify-content-center">
                  <Image
                    className="content_img"
                    src={twocolumntileData.image.url}
                    width="300"
                    height="300"
                    alt={"jsjs"}
                  />
                </div>
                <div class="col">
                  <h1>{twocolumntileData.title}</h1>
                  <h5>{twocolumntileData.desciption}</h5>
                </div>
              </div>
            ) : (
              <div class="row p-4">
                <div class="col ">
                  <h1>{twocolumntileData.title}</h1>
                  <h5>{twocolumntileData.desciption}</h5>
                </div>
                <div class="col d-flex align-items-center justify-content-center">
                  <Image
                    className="content_img"
                    src={twocolumntileData.image.url}
                    width="300"
                    height="300"
                    alt={"jsjs"}
                  />
                </div>
              </div>
            )}
          </div>
          <div className="container">
            {twocolumntileData.reverse_orientation ? (
              <div class="row p-4">
                <div class="col ">
                  <h1>{twocolumntileData.title_2}</h1>
                  <h5>{twocolumntileData.content_2}</h5>
                </div>
                <div class="col ">
                  <h1>{twocolumntileData.title}</h1>
                  <h5>{twocolumntileData.desciption}</h5>
                </div>
              </div>
            ) : (
              <div class="row p-4">
                <div class="col ">
                  <h1>{twocolumntileData.title}</h1>
                  <h5>{twocolumntileData.desciption}</h5>
                </div>
                <div class="col  align-items-center justify-content-center">
                  <h1>{twocolumntileData.title_2}</h1>
                  <h5>{twocolumntileData.content_2}</h5>
                </div>
              </div>
            )}
          </div>
          <div className="container-fluid p-0">
            <div class="col-12">
              <div class="card bg-warning bg-gradient">
                <div class="card-body container">
                  <h5 class="card-title">{ctaData.title}</h5>
                  <p class="card-text">{ctaData.description}</p>
                  <a href={ctaData.button.link.href} class="btn btn-primary">
                    {ctaData.button.link.title}
                  </a>
                </div>
              </div>
            </div>
          </div>
        </Layout>
      </main>
    </>
  );
}

export async function getStaticProps() {
  const result = await Stack.getEntry("home_p", "en-us");
  const carousel = await Stack.getEntry("carousel", "en-us");
  const twocolumntile = await Stack.getEntry("twocolumntile", "en-us");
  const cta = await Stack.getEntryWithRef("home_p", ["cta"], "en-us");
  return {
    props: {
      pagedata: result[0][0] || [],
      carouselData: carousel[0][0] || [],
      twocolumntileData: twocolumntile[0][0] || [],
      ctaData: cta[0][0].cta[0] || [],
    },
  };
}
